---
- hosts: all
  become: yes

  vars_files:
    - vars.yml

  pre_tasks:
    - name: Update apt cache if needed
      apt: update_cache=yes cache_valid_time=3600
  
  handlers:
    - name: restart apache
      service: name=apache2 state=restarted

  tasks:
    - name: Get software for apt repository management.
      apt:
        state: present
        name:
          - python3-apt
          - python3-pycurl
  
    - name: Add ondrey repository for later versions of PHP
      apt_repository: repo='ppa:ondrej/php' update_cache=yes

    - name: "Install Apache, MySQL, PHP and other dependencies"
      apt:
        state: present
        name:
          - acl
          - git
          - curl
          - unzip
          - sendmail
          - apache2
          - php8.4-common
          - php8.4-cli
          - php8.4-dev
          - php8.4-gd
          - php8.4-curl
          - php8.4-opcache
          - php8.4-xml
          - php8.4-mbstring
          - php8.4-pdo
          - php8.4-mysql
          - php8.4-apcu
#          - libcre3-dev
          - libapache2-mod-php8.4
          - python3-mysqldb
          - mysql-server
      
    # There is no firewall
    # - name: Disable the firewall (since this is for testing).
    #   service: name=ufw state=stopped

    - name: "Start Apache, MySQL and PHP"
      service: name="{{ item }}" state=started enabled=yes
      with_items:
        - apache2
        - mysql

    - name: Enable Apache rewrite module (required for Drupal)
      apache2_module: name=rewrite state=present
      notify: restart apache

    - name: Add Apache virtualhost for Drupal
      template:
        src: "templates/drupal.test.conf.j2"
        dest: "/etc/apache2/sites-available/{{ domain }}.test.conf"
        owner: root
        group: root
        mode: 0644
      notify: restart apache
    
    - name: Enable Drupal site
      command: >
        a2ensite {{ domain }}.test
        creates=/etc/apache2/sites-enabled/{{ domain }}.test.conf
      notify: restart apache

    - name: Disable default site
      command: >
        a2dissite 000-default
        removes=/etc/apache2/sites-enabled/000-default.conf
      notify: restart apache

    - name: Adjust OpCache memory setting.
      lineinfile:
        dest: /etc/php/8.4/apache2/conf.d/10-opcache.ini
        regexp: '^opcache.memory_consumption'
        line: 'opcache.memory_consumption = 96'
        state: present
      notify: restart apache
    
    - name: Create a MySQL database for Drupal
      mysql_db: "db={{ domain }} state=present"

    - name: Create a MySQL user for Drupal
      mysql_user:
        name: "{{ domain }}"
        password: "1234"
        priv: "{{ domain }}.*:ALL"
        host: localhost
        state: present
    
    - name: Download Composer installer
      get_url:
        url: https://getcomposer.org/installer
        dest: /tmp/composer-installer.php
        mode: 0755

    - name: Run Composer installer
      command: >
        php composer-installer.php
        chdir=/tmp
        creates=/usr/local/bin/composer

    - name: Move Composer into globally-accessible location
      command: >
        mv /tmp/composer.phar /usr/local/bin/composer
        creates=/usr/local/bin/composer
    
    - name: Ensure Drupal directory exists
      file:
        path: "{{ drupal_core_path }}"
        state: directory
        owner: www-data
        group: www-data
    
    - name: Check if Drupal project already exists
      stat:
        path: "{{ drupal_core_path }}/composer.json"
      register: drupal_composer_json

    - name: Create Drupal project
      composer:
        command: create-project
        arguments: drupal/recommended-project "{{ drupal_core_path }}"
        working_dir: "{{ drupal_core_path }}"
        no_dev: true
      become_user: www-data
      when: not drupal_composer_json.stat.exists

    - name: Add drush to the Drupal site with Composer
      composer:
        command: require
        arguments: drush/drush:13.*
        working_dir: "{{ drupal_core_path }}"
      become_user: www-data
      when: not drupal_composer_json.stat.exists

    - name: Install Drupal
      command: >
        vendor/bin/drush si -y --site-name="{{ drupal_site_name }}"
        --account-name=admin
        --account-pass=admin
        --db-url=mysql://{{ domain }}:1234@localhost/{{ domain }}
        --root={{ drupal_core_path }}/web
        chdir={{ drupal_core_path }}
        creates={{ drupal_core_path }}/web/sites/default/settings.php
      notify: restart apache
      become_user: www-data

    - name: Check whether {{ domain }}.test is contained in /etc/hosts
      command: grep -qE '\s+{{ domain }}.test' /etc/hosts
      register: has_drupal_domain
      ignore_errors: yes
      changed_when: false

    - name: Map {{ domain }}.test to 127.0.0.1 in /etc/hosts
      command: >
        echo "127.0.0.1 {{ domain }}.test" >> /etc/hosts
      when: not has_drupal_domain.rc == 0
      notify: restart apache
